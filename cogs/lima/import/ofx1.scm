(provide make-extract)

(require "srfi/srfi-28/format.scm")
(require "lima/types.scm")
(require "lima/list.scm")
(require "lima/alist.scm")
(require "lima/stdlib.scm")
(require "lima/import/prelude.scm")
(require "lima/import/extract.scm")
(require "lima/import/types.scm")

;; extract balance from header if we can find the fields we need, otherwise return empty
(define (extract-balance default-currency hdr)
  (let* ((cur (cdr-assoc-or-default 'curdef default-currency hdr))
         (balamt (cdr-assoc-or-empty 'balamt hdr))
         (dtasof (cdr-assoc-or-empty 'dtasof hdr)))
    (if (or (empty? balamt) (empty? dtasof))
      '()
      ;; Beancount balance date is as of midnight at the beginning of the day, but we have the end of the day, so add 1 day
      (let ((date (date-after (parse-date dtasof "%Y%m%d") 1))
            (amt (parse-decimal balamt)))
        (list (cons 'date date)
          (cons 'amount (amount amt cur)))))))

;; extract imported OFX1 transactions into an intermediate representation
(define (make-extract default-currency accounts-by-id source)
  (let* ((hdr (import-source-header source))
         (cur (cdr-assoc-or-default 'curdef default-currency hdr))
         (acctid (cdr-assoc-or-default 'acctid "unknown-acctid" hdr))
         (primary-account (cdr-assoc-or-default acctid "Assets:Unknown" accounts-by-id))
         (field-names (import-source-fields source))
         (get-dtposted (make-field-getter field-names "dtposted" (lambda (x) (parse-date x "%Y%m%d"))))
         (get-trnamt (make-field-getter field-names "trnamt" parse-decimal))
         (get-fitid (make-field-getter field-names "fitid" identity))
         (get-name (make-field-getter field-names "name" identity))
         (get-memo (make-field-getter field-names "memo" identity)))
    (lambda (txn)
      (list (cons 'date (get-dtposted txn))
        (cons 'payee (get-name txn))
        (cons 'narration (get-memo txn))
        (cons 'amount (amount (get-trnamt txn) cur))
        (cons 'primary-account primary-account)
        (cons 'txnid (format "~a.~a" acctid (get-fitid txn)))))))
