(require "lima/types.scm")
(require "lima/list.scm")
(require "lima/import/prelude.scm")

(define (convert imported currency base-account other-account)
  (let* ((fields (imported-transaction-fields imported))
         (date-i (list-index fields "date"))
         (description-i (list-index fields "description"))
         (amount-i (list-index fields "amount")))
    (map (lambda (txn)
          (let ((date (parse-date(list-ref txn date-i) "%d/%m/%Y"))
                (description(list-ref txn description-i))
                (amount (parse-decimal (list-ref txn amount-i))))
            (list date description amount currency base-account other-account)))
      (imported-transactions imported))))

;; TODO make this not so quick and dirty
(define (display-transaction txn)
  (display (list-ref txn 0))
  (display " ")
  (display "txn")
  (display " \"")
  (display (list-ref txn 1))
  (display "\"")
  (displayln)
  (display "  ")
  (display (list-ref txn 4))
  (display "  ")
  (display (list-ref txn 2))
  (display "  ")
  (display (list-ref txn 3))
  (displayln)
  (display "  ")
  (display (list-ref txn 5))
  (displayln)
  (displayln))

(define (display-transactions converted-transactions)
  (for-each display-transaction converted))

(define converted (reverse (convert *imported* "GBP" "Assets:Bank" "Expenses:Unknown")))
